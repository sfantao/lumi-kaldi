  warning: src/src/cudamatrix/cu-kernels.cu:1830: unsupported device function "float_as_uint":                     __float_as_uint(op.Reduce(val, __uint_as_float(assumed))));
  warning: src/src/cudamatrix/cu-kernels.cu:1830: unsupported device function "int_as_float":                     __float_as_uint(op.Reduce(val, __uint_as_float(assumed))));
  warning: src/src/cudamatrix/cu-kernels.cu:1830: unsupported device function "uint_as_float":                     __float_as_uint(op.Reduce(val, __uint_as_float(assumed))));
  warning: src/src/cudamatrix/cu-kernels.cu:#1973 :   hipLaunchKernelGGL(HIP_KERNEL_NAME(_strided_reduction_fused_kernel<SUMAB, Real, 4>), dim3(nblks), dim3(thrds), shmemSize, cudaStreamPerThread, dots, data, scratch, d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4052 : void cudaF_copy_upp_low(dim3 Gr, dim3 Bl, float* A, MatrixDim dimA) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4054 : void cudaF_copy_low_upp(dim3 Gr, dim3 Bl, float* A, MatrixDim dimA) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4056 : void cudaF_add_diag_vec_mat(dim3 Gr, dim3 Bl, float alpha, float *mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#4064 : void cudaF_copy_from_tp_trans(dim3 Gr, dim3 Bl, float* A, const float* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4068 : void cudaFD_copy_from_tp_trans(dim3 Gr, dim3 Bl, float* A, const double* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4073 : void cudaF_copy_from_tp(dim3 Gr, dim3 Bl, float* A, const float* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4077 : void cudaFD_copy_from_tp(dim3 Gr, dim3 Bl, float* A, const double* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4082 : void cudaF_copy_cols(dim3 Gr, dim3 Bl, float* dst, const float* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4088 : void cudaF_add_cols(dim3 Gr, dim3 Bl, float* dst, const float* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4094 : void cudaF_copy_rows(dim3 Gr, dim3 Bl, float* dst, const float* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4100 : void cudaF_copy_rows_direct(dim3 Gr, dim3 Bl, float* dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4105 : void cudaF_copy_to_rows_direct(dim3 Gr, dim3 Bl, float* const * dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4110 : void cudaF_add_rows(dim3 Gr, dim3 Bl, float alpha, float* dst, const float* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4116 : void cudaF_mul_rows(dim3 Gr, dim3 Bl, float* dst, const float* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4122 : void cudaF_add_rows_direct(dim3 Gr, dim3 Bl, float alpha, float* dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4127 : void cudaF_add_to_rows(dim3 Gr, dim3 Bl, float alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#4133 : void cudaF_add_to_rows_direct(dim3 Gr, dim3 Bl, float alpha, float* const * dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4138 : void cudaF_set_diag(int Gr, int Bl, float* mat, float value, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4142 : void cudaF_set_diag_packed(int Gr, int Bl, float* mat, float value, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4146 : void cudaF_add_diag_packed(int Gr, int Bl, float* mat, float value, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4150 : void cudaF_set_const(dim3 Gr, dim3 Bl, float* mat, float value, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4154 : void cudaF_set_zero_above_diag(dim3 Gr, dim3 Bl, float* mat, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4158 : void cudaF_add(dim3 Gr, dim3 Bl, float* mat, float value, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4162 : void cudaF_scale_diag_packed(int Gr, int Bl, float* mat, float value, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4166 : void cudaF_scale(dim3 Gr, dim3 Bl, float* mat, float value, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4170 : void cudaF_mul_elements(dim3 Gr, dim3 Bl, float* mat, const float* A,
  warning: src/src/cudamatrix/cu-kernels.cu:#4175 : void cudaF_div_elements(dim3 Gr, dim3 Bl, float* mat, const float* A,
  warning: src/src/cudamatrix/cu-kernels.cu:#4180 : void cudaF_max(dim3 Gr, dim3 Bl, float* mat, const float* A, MatrixDim dst_d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4185 : void cudaF_min(dim3 Gr, dim3 Bl, float* mat, const float* other,
  warning: src/src/cudamatrix/cu-kernels.cu:#4190 : void cudaF_mul_cols_vec(dim3 Gr, dim3 Bl, float* mat, const float* scale,
  warning: src/src/cudamatrix/cu-kernels.cu:#4195 : void cudaF_mul_rows_vec(dim3 Gr, dim3 Bl, float* mat, const float* scale,
  warning: src/src/cudamatrix/cu-kernels.cu:#4200 : void cudaF_mul_rows_group_mat(dim3 Gr, dim3 Bl, float *y, const float *x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4206 : void cudaF_diff_group_pnorm(dim3 Gr, dim3 Bl, float *id, const float *iv,
  warning: src/src/cudamatrix/cu-kernels.cu:#4214 : void cudaF_calc_group_max_deriv(dim3 Gr, dim3 Bl, float *y, const float *x1,
  warning: src/src/cudamatrix/cu-kernels.cu:#4221 : void cudaF_div_rows_vec(dim3 Gr, dim3 Bl, float* mat, const float* vec_div,
  warning: src/src/cudamatrix/cu-kernels.cu:#4226 : void cudaF_add_mat(dim3 Gr, dim3 Bl, float alpha, const float* src, float* dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4235 : void cudaF_add_mat_blocks(dim3 Gr, dim3 Bl, float alpha, const float* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4248 : void cudaF_add_mat_repeated(dim3 Gr, dim3 Bl, float alpha, const float* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4254 : void cudaF_set_mat_mat_div_mat(dim3 Gr, dim3 Bl, const float *A, const float *B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4260 : void cudaF_sy_add_tr2(dim3 Gr, dim3 Bl, float alpha, float beta, const float* T,
  warning: src/src/cudamatrix/cu-kernels.cu:#4265 : void cudaF_add_vec_to_cols(dim3 Gr, dim3 Bl, float alpha, const float* col,
  warning: src/src/cudamatrix/cu-kernels.cu:#4270 : void cudaF_add_vec_to_rows(dim3 Gr, dim3 Bl, float alpha, const float* row,
  warning: src/src/cudamatrix/cu-kernels.cu:#4275 : void cudaF_add_mat_diag_vec(dim3 Gr, dim3 Bl, float alpha, float *mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#4283 : void cudaF_add_mat_mat_elements(dim3 Gr, dim3 Bl, float *data,
  warning: src/src/cudamatrix/cu-kernels.cu:#4292 : void cudaF_apply_mask(dim3 Gr, dim3 Bl, float* mat, const char* mask,
  warning: src/src/cudamatrix/cu-kernels.cu:#4301 : void cudaF_max_mat_cols(int Gr, int Bl, float* result, const float* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#4306 : void cudaF_min_mat_cols(int Gr, int Bl, float* result, const float* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#4311 : void cudaF_sum_mat_cols(int Gr, int Bl, float* result, const float* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#4316 : void cudaF_add_row_sum_mat(float* result, const float* mat, void* scratch,
  warning: src/src/cudamatrix/cu-kernels.cu:#4321 : void cudaF_add_col_sum_mat(int Gr, int Bl, float* result, const float* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#4329 : void cudaF_replace_value(int Gr, int Bl, float *v, int dim, float orig,
  warning: src/src/cudamatrix/cu-kernels.cu:#4334 : void cudaF_set_bias_params(int Gr, int Bl, float* v, const float* a,
  warning: src/src/cudamatrix/cu-kernels.cu:#4350 : void cudaF_vec_mul_elements(int Gr, int Bl, float* v, const float* a, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4354 : void cudaF_vec_min(int Gr, int Bl, const float* v, float* value, int dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#4360 : void cudaF_vec_max(int Gr, int Bl, const float* v, float* value, int dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#4366 : void cudaF_trace_mat_mat_trans(const float* A, const float* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4368 :   trace_mat_mat_trans_atomic(value, A, B, dA, B_stride, cudaStreamPerThread);
  warning: src/src/cudamatrix/cu-kernels.cu:#4371 : void cudaF_trace_mat_mat(dim3 Gr, dim3 Bl, const float* A, const float* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4376 : void cudaF_add_diag_mat_mat_MNT(int Gr, int Bl, const float alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#4383 : void cudaF_add_diag_mat_mat_MTN(dim3 Gr, dim3 Bl, const float alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#4397 : void cudaF_add_diag_mat_mat_MN(dim3 Gr, dim3 Bl, const float alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#4408 : void cudaF_add_vec_vec(int Gr, int Bl, float alpha, float* v, const float* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4413 : void cudaF_vec_sum(int Gr, int Bl, float* v, float* value, int dim, int inc) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4418 : void cudaF_matrix_add_elements(dim3 Gr, dim3 Bl, float *data, MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#4424 : void cudaF_matrix_add_indexed_values(dim3 Gr, dim3 Bl, MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#4430 : void cudaF_matrix_add_to_elements(dim3 Gr, dim3 Bl, float alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#4436 : void cudaF_vector_copy_elements(dim3 Gr, dim3 Bl, float *data, int dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#4444 : void cudaF_comp_obj_deriv(dim3 Gr, dim3 Bl, MatrixElement<float>* x, int s,
  warning: src/src/cudamatrix/cu-kernels.cu:#4450 : void cudaD_comp_obj_deriv(dim3 Gr, dim3 Bl, MatrixElement<double>* x, int s,
  warning: src/src/cudamatrix/cu-kernels.cu:#4456 : void cudaF_vec_copy_diag_from_packed(int Gr, int Bl, float *dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4461 : void cudaF_vec_apply_floor(int Gr, int Bl, float* v, float floor_val,
  warning: src/src/cudamatrix/cu-kernels.cu:#4466 : void cudaF_vec_apply_ceiling(int Gr, int Bl, float* v, float ceiling_val,
  warning: src/src/cudamatrix/cu-kernels.cu:#4471 : void cudaF_vec_apply_exp(int Gr, int Bl, float* v, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4475 : void cudaF_vec_apply_log(int Gr, int Bl, float* v, float* flag, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4479 : void cudaF_invert_elements(dim3 Gr, dim3 Bl, float* data, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4483 : void cudaF_add_mat_blockmat(dim3 Gr, dim3 Bl, float *data, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4499 : void cudaF_block_add_mat_mat(dim3 Gr, dim3 Bl, CuBlockMatrixData *B_cu_data,
  warning: src/src/cudamatrix/cu-kernels.cu:#4512 : void cudaF_soft_hinge(dim3 Gr, dim3 Bl, float* y, const float* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4517 : void cudaF_group_pnorm(dim3 Gr, dim3 Bl, float *y, const float *x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4522 : void cudaF_group_spec_pnorm(dim3 Gr, dim3 Bl, float* y, const float* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4543 : void cudaF_group_max(dim3 Gr, dim3 Bl, float *y, const float *x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4549 : void cudaF_sigmoid(dim3 Gr, dim3 Bl, float* y, const float* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4554 : void cudaF_diff_sigmoid(dim3 Gr, dim3 Bl, float* eout, const float* e,
  warning: src/src/cudamatrix/cu-kernels.cu:#4560 : void cudaF_tanh(dim3 Gr, dim3 Bl, float* y, const float* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4565 : void cudaF_diff_tanh(dim3 Gr, dim3 Bl, float* eout, const float* e,
  warning: src/src/cudamatrix/cu-kernels.cu:#4570 : void cudaF_ensure_nonzero(dim3 Gr, dim3 Bl, const float *x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4576 : void cudaF_parametric_relu(dim3 Gr, dim3 Bl, float* y, const float* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4582 : void cudaF_diff_parametric_relu(dim3 Gr, dim3 Bl, float* eout, const float* e,
  warning: src/src/cudamatrix/cu-kernels.cu:#4588 : void cudaF_heaviside(dim3 Gr, dim3 Bl, float* y, const float* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4593 : void cudaF_exp(dim3 Gr, dim3 Bl, float* y, const float* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4598 : void cudaF_pow(dim3 Gr, dim3 Bl, float* y, const float* x, float power, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4603 : void cudaF_ceiling(dim3 Gr, dim3 Bl, float* y, const float* x, float ceiling_val,
  warning: src/src/cudamatrix/cu-kernels.cu:#4608 : void cudaF_floor(dim3 Gr, dim3 Bl, float* y, const float* x, float floor_val,
  warning: src/src/cudamatrix/cu-kernels.cu:#4613 : void cudaF_exp_limited(dim3 Gr, dim3 Bl, float* y, const float* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4618 : void cudaF_exp_special(dim3 Gr, dim3 Bl, float* y, const float* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4623 : void cudaF_log(dim3 Gr, dim3 Bl, float* y, const float* x, MatrixDim d, int src_stride) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4627 : void cudaF_pow_abs(dim3 Gr, dim3 Bl, float* y, const float* x, float power,
  warning: src/src/cudamatrix/cu-kernels.cu:#4632 : void cudaF_softmax_reduce(size_t Gr, size_t Bl, float* y, const float* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4637 : void cudaF_log_softmax_reduce(size_t Gr, size_t Bl, float* y, const float* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4642 : void cudaF_splice(dim3 Gr, dim3 Bl, float* y, const float* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4647 : void cudaF_normalize_per_row(size_t Gr, size_t Bl, float *y, int y_stride,
  warning: src/src/cudamatrix/cu-kernels.cu:#4653 : void cudaF_one(int Gr, int Bl, float* x, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4657 : void cudaF_take_mean(dim3 Gr, dim3 Bl, const float* x, float* y,
  warning: src/src/cudamatrix/cu-kernels.cu:#4662 : void cudaF_take_lower(dim3 Gr, dim3 Bl, const float* x, float* y,
  warning: src/src/cudamatrix/cu-kernels.cu:#4667 : void cudaF_take_upper(dim3 Gr, dim3 Bl, const float* x, float* y,
  warning: src/src/cudamatrix/cu-kernels.cu:#4672 : void cudaF_copy_from_sp(dim3 Gr, dim3 Bl, const float* x, float* y,
  warning: src/src/cudamatrix/cu-kernels.cu:#4677 : void cudaF_copy(dim3 Gr, dim3 Bl, float* y, const float* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4682 : void cudaF_randomize(dim3 Gr, dim3 Bl, float* y, const float* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4688 : void cudaF_regularize_l1(dim3 Gr, dim3 Bl, float* wei, float* grad, float l1,
  warning: src/src/cudamatrix/cu-kernels.cu:#4693 : void cudaF_find_row_max_id(dim3 Gr, dim3 Bl, const float* mat, float* vec_val,
  warning: src/src/cudamatrix/cu-kernels.cu:#4698 : void cudaF_diff_xent(dim3 Gr, dim3 Bl, const int32_cuda* vec_tgt,
  warning: src/src/cudamatrix/cu-kernels.cu:#4703 : void cudaF_diff_softmax(dim3 Gr, dim3 Bl, float* x, const MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#4709 : void cudaF_copy_rows_from_vec(dim3 Gr, dim3 Bl, float *mat_out, MatrixDim d_out,
  warning: src/src/cudamatrix/cu-kernels.cu:#4714 : void cudaF_diff_log_softmax(dim3 Gr, dim3 Bl, const MatrixDim in_deriv_dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#4722 : void cudaF_copy_col_from_mat_df(int Gr, int Bl, double* v, int col,
  warning: src/src/cudamatrix/cu-kernels.cu:#4727 : void cudaF_copy_col_from_mat_fd(int Gr, int Bl, float* v, int col,
  warning: src/src/cudamatrix/cu-kernels.cu:#4732 : void cudaF_sum_column_ranges(dim3 Gr, dim3 Bl, float *data, MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#4738 : void cudaF_add_row_ranges(dim3 Gr, dim3 Bl, float *data, MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#4744 : void cudaF_matrix_lookup(dim3 Gr, dim3 Bl, const float *data, MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#4750 : void cudaF_equal_element_mask(dim3 Gr, dim3 Bl, const float *mat1,
  warning: src/src/cudamatrix/cu-kernels.cu:#4765 : void cudaD_copy_upp_low(dim3 Gr, dim3 Bl, double* A, MatrixDim dimA) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4767 : void cudaD_copy_low_upp(dim3 Gr, dim3 Bl, double* A, MatrixDim dimA) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4769 : void cudaD_add_diag_vec_mat(dim3 Gr, dim3 Bl, double alpha, double *mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#4777 : void cudaD_copy_from_tp_trans(dim3 Gr, dim3 Bl, double* A, const double* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4781 : void cudaDF_copy_from_tp_trans(dim3 Gr, dim3 Bl, double* A, const float* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4786 : void cudaD_copy_from_tp(dim3 Gr, dim3 Bl, double* A, const double* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4790 : void cudaDF_copy_from_tp(dim3 Gr, dim3 Bl, double* A, const float* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#4795 : void cudaD_copy_cols(dim3 Gr, dim3 Bl, double* dst, const double* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4801 : void cudaD_add_cols(dim3 Gr, dim3 Bl, double* dst, const double* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4807 : void cudaD_copy_rows(dim3 Gr, dim3 Bl, double* dst, const double* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4813 : void cudaD_copy_rows_direct(dim3 Gr, dim3 Bl, double* dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4818 : void cudaD_copy_to_rows_direct(dim3 Gr, dim3 Bl, double* const * dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4823 : void cudaD_add_rows(dim3 Gr, dim3 Bl, double alpha, double* dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4829 : void cudaD_mul_rows(dim3 Gr, dim3 Bl, double* dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4835 : void cudaD_add_rows_direct(dim3 Gr, dim3 Bl, double alpha, double* dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#4840 : void cudaD_add_to_rows(dim3 Gr, dim3 Bl, double alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#4846 : void cudaD_add_to_rows_direct(dim3 Gr, dim3 Bl, double alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#4852 : void cudaD_set_diag(int Gr, int Bl, double* mat, double value, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4856 : void cudaD_set_diag_packed(int Gr, int Bl, double* mat, double value, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4860 : void cudaD_add_diag_packed(int Gr, int Bl, double* mat, double value, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4864 : void cudaD_set_const(dim3 Gr, dim3 Bl, double* mat, double value, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4868 : void cudaD_set_zero_above_diag(dim3 Gr, dim3 Bl, double* mat, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4872 : void cudaD_add(dim3 Gr, dim3 Bl, double* mat, double value, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4876 : void cudaD_scale_diag_packed(int Gr, int Bl, double* mat, double value,
  warning: src/src/cudamatrix/cu-kernels.cu:#4881 : void cudaD_scale(dim3 Gr, dim3 Bl, double* mat, double value, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#4885 : void cudaD_mul_elements(dim3 Gr, dim3 Bl, double* mat, const double* A,
  warning: src/src/cudamatrix/cu-kernels.cu:#4890 : void cudaD_div_elements(dim3 Gr, dim3 Bl, double* mat, const double* A,
  warning: src/src/cudamatrix/cu-kernels.cu:#4895 : void cudaD_max(dim3 Gr, dim3 Bl, double* mat, const double* A, MatrixDim dst_d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4900 : void cudaD_min(dim3 Gr, dim3 Bl, double* mat, const double* other, MatrixDim mat_d,
  warning: src/src/cudamatrix/cu-kernels.cu:#4905 : void cudaD_mul_cols_vec(dim3 Gr, dim3 Bl, double* mat, const double* scale,
  warning: src/src/cudamatrix/cu-kernels.cu:#4910 : void cudaD_mul_rows_vec(dim3 Gr, dim3 Bl, double* mat, const double* scale,
  warning: src/src/cudamatrix/cu-kernels.cu:#4915 : void cudaD_mul_rows_group_mat(dim3 Gr, dim3 Bl, double* y, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#4920 : void cudaD_diff_group_pnorm(dim3 Gr, dim3 Bl, double *id, const double *iv,
  warning: src/src/cudamatrix/cu-kernels.cu:#4928 : void cudaD_calc_group_max_deriv(dim3 Gr, dim3 Bl, double*y, const double* x1,
  warning: src/src/cudamatrix/cu-kernels.cu:#4935 : void cudaD_div_rows_vec(dim3 Gr, dim3 Bl, double* mat, const double* vec_div,
  warning: src/src/cudamatrix/cu-kernels.cu:#4940 : void cudaD_add_mat(dim3 Gr, dim3 Bl, double alpha, const double* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4949 : void cudaD_add_mat_blocks(dim3 Gr, dim3 Bl, double alpha, const double* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4962 : void cudaD_add_mat_repeated(dim3 Gr, dim3 Bl, double alpha, const double* src,
  warning: src/src/cudamatrix/cu-kernels.cu:#4967 : void cudaD_set_mat_mat_div_mat(dim3 Gr, dim3 Bl, const double *A,
  warning: src/src/cudamatrix/cu-kernels.cu:#4974 : void cudaD_sy_add_tr2(dim3 Gr, dim3 Bl, double alpha, double beta,
  warning: src/src/cudamatrix/cu-kernels.cu:#4980 : void cudaD_add_vec_to_cols(dim3 Gr, dim3 Bl, double alpha, const double* col,
  warning: src/src/cudamatrix/cu-kernels.cu:#4985 : void cudaD_add_vec_to_rows(dim3 Gr, dim3 Bl, double alpha, const double* row,
  warning: src/src/cudamatrix/cu-kernels.cu:#4990 : void cudaD_add_mat_diag_vec(dim3 Gr, dim3 Bl, double alpha, double *mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#4998 : void cudaD_add_mat_mat_elements(dim3 Gr, dim3 Bl, double *data,
  warning: src/src/cudamatrix/cu-kernels.cu:#5008 : void cudaD_apply_mask(dim3 Gr, dim3 Bl, double* mat, const char* mask,
  warning: src/src/cudamatrix/cu-kernels.cu:#5016 : void cudaD_max_mat_cols(int Gr, int Bl, double* result, const double* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#5021 : void cudaD_min_mat_cols(int Gr, int Bl, double* result, const double* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#5026 : void cudaD_sum_mat_cols(int Gr, int Bl, double* result, const double* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#5031 : void cudaD_add_row_sum_mat(double* result, const double* mat, void* scratch,
  warning: src/src/cudamatrix/cu-kernels.cu:#5036 : void cudaD_add_col_sum_mat(int Gr, int Bl, double* result, const double* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#5043 : void cudaD_replace_value(int Gr, int Bl, double *v, int dim, double orig,
  warning: src/src/cudamatrix/cu-kernels.cu:#5048 : void cudaD_set_bias_params(int Gr, int Bl, double* v, const double* a,
  warning: src/src/cudamatrix/cu-kernels.cu:#5054 : void cudaD_vec_mul_elements(int Gr, int Bl, double* v, const double* a,
  warning: src/src/cudamatrix/cu-kernels.cu:#5059 : void cudaD_vec_min(int Gr, int Bl, const double* v, double* value, int dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5065 : void cudaD_vec_max(int Gr, int Bl, const double* v, double* value, int dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5071 : void cudaD_trace_mat_mat_trans(const double* A,
  warning: src/src/cudamatrix/cu-kernels.cu:#5074 :   trace_mat_mat_trans_atomic(value, A, B, dA, B_stride, cudaStreamPerThread);
  warning: src/src/cudamatrix/cu-kernels.cu:#5077 : void cudaD_trace_mat_mat(dim3 Gr, dim3 Bl, const double* A, const double* B,
  warning: src/src/cudamatrix/cu-kernels.cu:#5082 : void cudaD_add_diag_mat_mat_MNT(int Gr, int Bl, const double alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#5089 : void cudaD_add_diag_mat_mat_MTN(dim3 Gr, dim3 Bl, const double alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#5103 : void cudaD_add_diag_mat_mat_MN(dim3 Gr, dim3 Bl, const double alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#5114 : void cudaD_add_vec_vec(int Gr, int Bl, double alpha, double* v, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#5119 : void cudaD_copy_col_from_mat_df(int Gr, int Bl, double* v, int col,
  warning: src/src/cudamatrix/cu-kernels.cu:#5124 : void cudaD_copy_col_from_mat_fd(int Gr, int Bl, float* v, int col,
  warning: src/src/cudamatrix/cu-kernels.cu:#5129 : void cudaD_vec_sum(int Gr, int Bl, double* v, double* value, int dim, int inc) {
  warning: src/src/cudamatrix/cu-kernels.cu:#5134 : void cudaD_matrix_add_elements(dim3 Gr, dim3 Bl, double *data, MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5140 : void cudaD_vector_copy_elements(dim3 Gr, dim3 Bl, double *data, int dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5148 : void cudaD_matrix_add_indexed_values(dim3 Gr, dim3 Bl, MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5154 : void cudaD_matrix_add_to_elements(dim3 Gr, dim3 Bl, double alpha,
  warning: src/src/cudamatrix/cu-kernels.cu:#5160 : void cudaD_vec_copy_diag_from_packed(int Gr, int Bl, double *dst,
  warning: src/src/cudamatrix/cu-kernels.cu:#5165 : void cudaD_vec_apply_floor(int Gr, int Bl, double* v, double floor_val,
  warning: src/src/cudamatrix/cu-kernels.cu:#5170 : void cudaD_vec_apply_ceiling(int Gr, int Bl, double* v, double ceiling_val,
  warning: src/src/cudamatrix/cu-kernels.cu:#5175 : void cudaD_vec_apply_exp(int Gr, int Bl, double* v, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#5179 : void cudaD_vec_apply_log(int Gr, int Bl, double* v, double* flag, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#5183 : void cudaD_invert_elements(dim3 Gr, dim3 Bl, double* data, MatrixDim d) {
  warning: src/src/cudamatrix/cu-kernels.cu:#5187 : void cudaD_add_mat_blockmat(dim3 Gr, dim3 Bl, double *data, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#5202 : void cudaD_block_add_mat_mat(dim3 Gr, dim3 Bl, CuBlockMatrixData *B_cu_data,
  warning: src/src/cudamatrix/cu-kernels.cu:#5215 : void cudaD_soft_hinge(dim3 Gr, dim3 Bl, double* y, const double* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#5220 : void cudaD_group_pnorm(dim3 Gr, dim3 Bl, double* y, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#5226 : void cudaD_group_spec_pnorm(dim3 Gr, dim3 Bl, double* y, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#5247 : void cudaD_group_max(dim3 Gr, dim3 Bl, double* y, const double* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#5253 : void cudaD_sigmoid(dim3 Gr, dim3 Bl, double* y, const double* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#5258 : void cudaD_diff_sigmoid(dim3 Gr, dim3 Bl, double* eout, const double* e,
  warning: src/src/cudamatrix/cu-kernels.cu:#5264 : void cudaD_tanh(dim3 Gr, dim3 Bl, double* y, const double* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#5269 : void cudaD_diff_tanh(dim3 Gr, dim3 Bl, double* eout, const double* e,
  warning: src/src/cudamatrix/cu-kernels.cu:#5274 : void cudaD_ensure_nonzero(dim3 Gr, dim3 Bl, const double *x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#5279 : void cudaD_parametric_relu(dim3 Gr, dim3 Bl, double* y, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#5285 : void cudaD_diff_parametric_relu(dim3 Gr, dim3 Bl, double* eout, const double* e,
  warning: src/src/cudamatrix/cu-kernels.cu:#5291 : void cudaD_heaviside(dim3 Gr, dim3 Bl, double* y, const double* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#5296 : void cudaD_exp(dim3 Gr, dim3 Bl, double* y, const double* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#5301 : void cudaD_pow(dim3 Gr, dim3 Bl, double* y, const double* x, double power, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#5306 : void cudaD_ceiling(dim3 Gr, dim3 Bl, double* y, const double* x, double ceiling_val,
  warning: src/src/cudamatrix/cu-kernels.cu:#5311 : void cudaD_floor(dim3 Gr, dim3 Bl, double* y, const double* x, double floor_val,
  warning: src/src/cudamatrix/cu-kernels.cu:#5316 : void cudaD_exp_limited(dim3 Gr, dim3 Bl, double* y, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#5321 : void cudaD_exp_special(dim3 Gr, dim3 Bl, double* y, const double* x, MatrixDim d,
  warning: src/src/cudamatrix/cu-kernels.cu:#5326 : void cudaD_log(dim3 Gr, dim3 Bl, double* y, const double* x, MatrixDim d, int src_stride) {
  warning: src/src/cudamatrix/cu-kernels.cu:#5330 : void cudaD_pow_abs(dim3 Gr, dim3 Bl, double* y, const double* x, double power,
  warning: src/src/cudamatrix/cu-kernels.cu:#5335 : void cudaD_softmax_reduce(size_t Gr, size_t Bl, double* y, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#5340 : void cudaD_log_softmax_reduce(size_t Gr, size_t Bl, double* y, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#5345 : void cudaD_normalize_per_row(size_t Gr, size_t Bl, double *y, int y_stride,
  warning: src/src/cudamatrix/cu-kernels.cu:#5351 : void cudaD_splice(dim3 Gr, dim3 Bl, double* y, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#5356 : void cudaD_one(int Gr, int Bl, double* x, int dim) {
  warning: src/src/cudamatrix/cu-kernels.cu:#5360 : void cudaD_take_mean(dim3 Gr, dim3 Bl, const double* x, double* y,
  warning: src/src/cudamatrix/cu-kernels.cu:#5365 : void cudaD_take_lower(dim3 Gr, dim3 Bl, const double* x, double* y,
  warning: src/src/cudamatrix/cu-kernels.cu:#5370 : void cudaD_take_upper(dim3 Gr, dim3 Bl, const double* x, double* y,
  warning: src/src/cudamatrix/cu-kernels.cu:#5375 : void cudaD_copy_from_sp(dim3 Gr, dim3 Bl, const double* x, double* y,
  warning: src/src/cudamatrix/cu-kernels.cu:#5380 : void cudaD_copy(dim3 Gr, dim3 Bl, double* y, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#5385 : void cudaD_randomize(dim3 Gr, dim3 Bl, double* y, const double* x,
  warning: src/src/cudamatrix/cu-kernels.cu:#5391 : void cudaD_regularize_l1(dim3 Gr, dim3 Bl, double* wei, double* grad, double l1,
  warning: src/src/cudamatrix/cu-kernels.cu:#5396 : void cudaD_find_row_max_id(dim3 Gr, dim3 Bl, const double* mat, double* vec_val,
  warning: src/src/cudamatrix/cu-kernels.cu:#5401 : void cudaD_diff_xent(dim3 Gr, dim3 Bl, const int32_cuda* vec_tgt,
  warning: src/src/cudamatrix/cu-kernels.cu:#5406 : void cudaD_diff_softmax(dim3 Gr, dim3 Bl, double* x, const MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5412 : void cudaD_diff_log_softmax(dim3 Gr, dim3 Bl, const MatrixDim in_deriv_dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5420 : void cudaD_copy_rows_from_vec(dim3 Gr, dim3 Bl, double *mat_out,
  warning: src/src/cudamatrix/cu-kernels.cu:#5425 : void cudaD_sum_column_ranges(dim3 Gr, dim3 Bl, double *data, MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5431 : void cudaD_add_row_ranges(dim3 Gr, dim3 Bl, double *data, MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5437 : void cudaD_matrix_lookup(dim3 Gr, dim3 Bl, const double *data, MatrixDim dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5443 : void cudaD_equal_element_mask(dim3 Gr, dim3 Bl, const double *mat1,
  warning: src/src/cudamatrix/cu-kernels.cu:#5555 : void cudaF_trace_mat_smat(dim3 Gr, dim3 Bl, const float* mat, MatrixDim mat_dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5561 : void cudaF_trace_mat_smat_trans(dim3 Gr, dim3 Bl, const float* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#5568 : void cudaD_trace_mat_smat(dim3 Gr, dim3 Bl, const double* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#5575 : void cudaD_trace_mat_smat_trans(dim3 Gr, dim3 Bl, const double* mat,
  warning: src/src/cudamatrix/cu-kernels.cu:#5583 : void cudaD_lstm_nonlinearity(dim3 Gr, dim3 Bl, const double* in,
  warning: src/src/cudamatrix/cu-kernels.cu:#5592 : void cudaF_lstm_nonlinearity(dim3 Gr, dim3 Bl, const float* in,
  warning: src/src/cudamatrix/cu-kernels.cu:#5601 : void cudaD_diff_lstm_nonlinearity(dim3 Gr, dim3 Bl, const int cell_dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5629 : void cudaF_diff_lstm_nonlinearity(dim3 Gr, dim3 Bl, const int cell_dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5659 : void cudaD_copy_cols_from_vec(dim3 Gr, dim3 Bl, double *mat_out,
  warning: src/src/cudamatrix/cu-kernels.cu:#5663 : void cudaF_copy_cols_from_vec(dim3 Gr, dim3 Bl, float *mat_out, MatrixDim d_out,
  warning: src/src/cudamatrix/cu-kernels.cu:#5668 : void cudaF_diff_normalize_per_row(size_t Gr, size_t Bl, float *id,
  warning: src/src/cudamatrix/cu-kernels.cu:#5676 : void cudaD_diff_normalize_per_row(size_t Gr, size_t Bl, double *id,
  warning: src/src/cudamatrix/cu-kernels.cu:#5684 : void cudaD_select_rows(dim3 Gr, dim3 Bl, const int* out_row_ptr,
  warning: src/src/cudamatrix/cu-kernels.cu:#5692 : void cudaF_select_rows(dim3 Gr, dim3 Bl, const int* out_row_ptr,
  warning: src/src/cudamatrix/cu-kernels.cu:#5699 : void cudaD_add_smat(dim3 Gr, dim3 Bl, double* mat, MatrixDim mat_dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5705 : void cudaF_add_smat(dim3 Gr, dim3 Bl, float* mat, MatrixDim mat_dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5711 : void cudaD_add_smat_trans(dim3 Gr, dim3 Bl, double* mat, MatrixDim mat_dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5717 : void cudaF_add_smat_trans(dim3 Gr, dim3 Bl, float* mat, MatrixDim mat_dim,
  warning: src/src/cudamatrix/cu-kernels.cu:#5795 :   hipLaunchKernelGGL(_noop_kernel, dim3(1), dim3(1), 0, cudaStreamLegacy);
  warning: src/src/cudamatrix/cu-kernels.cu:#5798 : void cudaF_mat_copy_range_clamped(
  warning: src/src/cudamatrix/cu-kernels.cu:#5812 : void cudaD_mat_copy_range_clamped(
  warning: src/src/cudamatrix/cu-kernels.cu:#5826 : void cudaF_batched_copy_mats(int32_t num_mats, int32_t *num_rows,
  warning: src/src/cudamatrix/cu-kernels.cu:#5891 : void cudaD_batched_copy_mats(int32_t num_mats, int32_t *num_rows,
  info: converted 340 CUDA->HIP refs ( error:0 init:0 version:0 device:2 context:0 module:0 memory:0 virtual_memory:0 addressing:0 stream:0 event:0 external_resource_interop:0 stream_memory:0 execution:0 graph:0 occupancy:0 texture:0 surface:0 peer:0 graphics:0 profiler:0 openGL:0 D3D9:0 D3D10:0 D3D11:0 VDPAU:0 EGL:0 thread:0 complex:0 library:0 device_library:0 device_function:23 include:0 include_cuda_main_header:1 type:1 literal:0 numeric_literal:1 define:0 extern_shared:0 kernel_launch:312 )
  warn:265 LOC:5954 in 'src/src/cudamatrix/cu-kernels.cu'
  hipLaunchKernelGGL 312
  HIP_KERNEL_NAME 19
  hipDeviceGetAttribute 1
  hipGetDevice 1
  hipDeviceAttributeWarpSize 1
  hip_runtime 1
  hipStream_t 1
